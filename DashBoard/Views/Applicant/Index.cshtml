@{
    ViewBag.Title = "Редагування | Абітурієнти | DUT";
}

<!-- Modal -->
<div class="modal fade" id="delModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Закрити</span></button>
                <h4 class="modal-title" id="myModalLabel">Видалення</h4>
            </div>
            @using (Ajax.BeginForm("DeleteApplicant", new AjaxOptions() {OnSuccess = ""}))
            {
                <div class="modal-body">
                    @Html.Hidden("applicantId")
                    Ви дійсно хочете бажаєте абітурієнта: <span style="color: brown; font-weight: bold" id="appldel"></span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Скасувати</button>
                    <button type="button" class="btn btn-primary">Видалити</button>
                </div>
            }
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Абітурієнти > Редагування</h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a></li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <div class="col-md-3">
                    @Html.Action("LoadApplicants", "Applicant", new {count = 0});
                </div>
                <div class="col-md-9" id="form_zero">
                    @using (Ajax.BeginForm("SaveApplicant", new AjaxOptions() {OnSuccess = "applicantHandler", OnBegin = "applicantHandlerBegin"}))
                    {
                        @Html.AntiForgeryToken()
                        <div class="x_panel">
                            <div class="x_title">Персональні дані</div>
                            <div class="x_content">
                                <div class="col-md-6 form-horizontal">
                                    <div class="form-group">
                                        @Html.Label("Id", new { @class = "control-label col-md-3" })
                                        <div class="col-md-9">@Html.TextBox("ApplicantId", "", new {@class = "form-control", placeholder = "Ідентифікатор", @readonly = "readonly" })</div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("ПІБ", new {@class = "control-label col-md-3"})
                                        <div class="col-md-9">@Html.TextBox("NameApplicant", "", new {@class = "form-control", placeholder = "Прізвище, ім'я, по-батькові"})</div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Телефон", new {@class = "control-label col-md-3"})
                                        <div class="col-md-9">@Html.TextBox("PhoneApplicant", "", new {@class = "form-control", placeholder = "+380 (__) ___-__-__"})</div>
                                    </div>
                                </div>
                                <div class="col-md-6 form-horizontal">
                                    <div class="form-group">
                                        @Html.Label("Заклад", new {@class = "control-label col-md-3"})
                                        <div class="col-md-9">@Html.TextBox("SchoolCollege", "", new {@class = "form-control", placeholder = "Назва закладу"})</div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Адреса", new {@class = "control-label col-md-3"})
                                        <div class="col-md-9">@Html.TextBox("Address", "", new {@class = "form-control", placeholder = "Місто, вулиця, тощо..."})</div>
                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Email", new {@class = "control-label col-md-3"})
                                        <div class="col-md-9">@Html.TextBox("MailApplicant", "", new {@class = "form-control", placeholder = "exaple@gmail.com"})</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="x_panel">
                            <div class="x_title">Побажання</div>
                            <div class="x_content">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Action("GetDepartments")
                                        <div class="col-md-6">
                                            <button id="btn-add-depart" class="form-control btn-default" onclick="isNotSendClick = true">Додати</button>
                                        </div>
                                        <div class="col-md-6">
                                            <button id="btn-del-depart" class="form-control btn-default" onclick="isNotSendClick = true">Видалити</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.Hidden("Speciality")
                                        <select id="selectedListDepart" class="form-control" size="4" multiple>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-md-offset-6">
                            <button id="btn-cancel"  class="form-control btn-danger" style="display: none" onclick="isNotSendClick = true">Відміна</button>
                        </div>
                        <div class="col-md-3">
                            <input type="submit" id="btn-save" value="Зберегти" class="form-control btn-success"  style="display: none"/>
                        </div>   
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section ScrJquery{
    <script src="/Scripts/jquery-1.10.2.min.js"></script>
    <script src="/Scripts/BootstrapMenu.min.js"></script>
    <script src="/Scripts/jquery.maskedinput.js"></script>
    <script>
        var isEditable = false;
        var currentApplicant;
        var listChanged = [];

        var isNotSendClick = false;

        $(document).ready(function() {
            var menu = new BootstrapMenu('#list-applicant',
                {
                    actionsGroups: [['add', 'remove'], ['load10', 'load50', 'load100']],
                    actions: {
                        add:
                        {
                            name: 'Додати абітурієнта',
                            iconClass: 'fa fa-plus',
                            onClick: function (row) {
                                if (isEditable == true) return;
                                $('#list-applicant').append($('<option/>', { text: 'Новий абітурієнт', value: '-1' }));
                                $('#list-applicant option').last().attr('selected', 'selected');
                                EditableMode(true,true);

                                $('#NameApplicant').val('');
                                $('#PhoneApplicant').val('');
                                $('#MailApplicant').val('');
                                $('#ApplicantId').val('');
                                $('#selectedListDepart option').each(function() {
                                    $(this).remove();
                                });
                            },
                            isEnabled: function(row) {
                                return !isEditable;
                            }
                        },
                        remove:
                        {
                            name: 'Видалити абітурієнта',
                            iconClass: 'fa fa-minus',
                            onClick: function (row) {
                                $('#appldel').text(currentApplicant.NameApplicant);
                                $('#delModal').modal('show');
                            },
                            isEnabled: function (row) {
                                var sel = $('#list-applicant option:selected').length;
                                return !isEditable && sel > 0;
                            },
                        },
                        load10:
                        {
                            name: 'Завантажити останні 10',
                            iconClass: 'fa-circle-o-notch fa-spin',
                            onClick: function(row) {
                                ajaxLoadApplicants(10);
                            }
                        },
                        load50:
                        {
                            name: 'Завантажити останні 50',
                            iconClass: 'fa-circle-o-notch fa-spin',
                            onClick: function(row) {
                                ajaxLoadApplicants(50);
                            }
                        },
                        load100:
                        {
                            name: 'Завантажити останні 100',
                            iconClass: 'fa-circle-o-notch fa-spin',
                            onClick: function(row) {
                                ajaxLoadApplicants(100);
                            }
                        }
                    }
                });

            $("#btn-add-depart").on("click",
                function(event) {
                    var comboBox = $("#listDepart option:selected");

                    var btmp = false;
                    var lDepOption = $("#selectedListDepart option");
                    if (lDepOption.length == 4) {
                        new PNotify({
                            title: 'Попередження',
                            text: 'Максимальна кількість побажань - 4',
                            type: 'warning',
                            styling: 'bootstrap3'
                        });
                        return;
                    }
                    lDepOption.each(function() {
                        if ($(this).val() == comboBox.val()) {
                            btmp = true;
                            return true;
                        }
                    });

                    if (btmp) {
                        new PNotify({
                            title: 'Попередження',
                            text: 'Спеціальність вже додана у список',
                            type: 'warning',
                            styling: 'bootstrap3'
                        });
                        return;
                    }

                    $("#selectedListDepart").append($("<option/>",
                        {
                            value: comboBox.val(),
                            text: comboBox.text()
                        }));

                    $("#selectedListDepart").css('background-color', 'rgb(255, 255, 146)');
                    listChanged.push('selectedListDepart');

                    EditableMode(true, true);
                });

            $("#btn-del-depart").on("click",
                function(event) {
                    var lDepOption = $("#selectedListDepart option:selected");
                    if (lDepOption.length == 0) {
                        new PNotify({
                            title: 'Попередження',
                            text: 'Нічого не обрано для видалення',
                            type: 'warning',
                            styling: 'bootstrap3'
                        });
                        return;
                    }

                    lDepOption.each(function() {
                        $(this).remove();
                    });

                    $("#selectedListDepart").css('background-color', 'rgb(255, 255, 146)');
                    listChanged.push('selectedListDepart');

                    EditableMode(true, true);
                });

            $('#btn-cancel').on('click', function(event) {
                EditableMode(false,false);
                if (currentApplicant == null) return;

                $('#ApplicantId').val(currentApplicant.ApplicantId);
                $('#NameApplicant').val(currentApplicant.NameApplicant);
                $('#PhoneApplicant').val(currentApplicant.PhoneApplicant.slice(1, currentApplicant.PhoneApplicant.length));
                $('#SchoolCollege').val(currentApplicant.SchoolCollege);
                $('#Address').val(currentApplicant.Address);
                $('#MailApplicant').val(currentApplicant.MailApplicant);

                updateSelectDepart(currentApplicant.Speciality);
            });

            $('#btn-save').on('click', function (event) {
                var textSpec = '';
                $('#selectedListDepart option').each(function() {
                    textSpec += this.value + ' ';
                });
                $('#Speciality').val(textSpec);
            });

            $("#Phone").mask('+380 (99) 999-99-99');

            $('#form0').on('change',
                function(e) {
                    if (e.target == null || e.target.id == 'listDepart' || e.target.id == 'selectedListDepart') return;
                    EditableMode(true,true);
                    listChanged.push(e.target.id);
                    $('#' + e.target.id).css('background-color', 'rgb(255, 255, 146)');
                });

            // Event select listbox (list-applicant)
            function listApplicantSelectEvent() {
                var currentApplicantId = $(this).val();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("GetApplicantDetail", "Applicant")?id=' + currentApplicantId,
                    success: function(obj) {
                        if (obj.model == 'failed') {
                            new PNotify({title: 'Результат', text: obj.modelList[0], type: 'error',styling: 'bootstrap3' });
                            return;
                        }

                        EditableMode(false,false);

                        currentApplicant = obj.applicant;

                        $('#ApplicantId').val(obj.applicant.ApplicantId);
                        $('#NameApplicant').val(obj.applicant.NameApplicant);
                        $('#PhoneApplicant').val(obj.applicant.PhoneApplicant.slice(1, obj.applicant.PhoneApplicant.length));
                        $('#SchoolCollege').val(obj.applicant.SchoolCollege);
                        $('#Address').val(obj.applicant.Address);
                        $('#MailApplicant').val(obj.applicant.MailApplicant);

                        updateSelectDepart(currentApplicant.Speciality);
                    }
                });
            }

            function ajaxLoadApplicants(counts) {
                EditableMode(false,true);
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadApplicants", "Applicant")?count='+counts,
                    success: function(data) {
                        $('#list-applicant').replaceWith(data);
                        $("#list-applicant").change(listApplicantSelectEvent);
                    }
                });
            }

            function updateSelectDepart(values) {
                $('#selectedListDepart option').each(function () { $(this).remove() });

                var splitdata = values.split(' ');
                var listDepart = $('#listDepart option');
  
                $.each(splitdata,function(index1,data) {
                    listDepart.each(function() {
                        if (this.value == data) {
                            $('#selectedListDepart').append($('<option/>',
                                {
                                    text : this.text,
                                    value : this.value
                                }));
                        }
                    });
                });
            }
        });

        function applicantDelete() {
            $.ajax({
                type: 'POST',
                url:
            })
        }

        function EditableMode(status,disform) {
            if (status) {
                $('#btn-save').show();
                $('#btn-cancel').show();
                isEditable = true;

                if (disform) {
                    $('#form_zero *').prop('disabled', false);
                } else {
                    $('#form_zero *').prop('disabled', true);
                }
                    
                $('#list-applicant').prop('disabled', true);
            } else {
                $('#btn-save').hide();
                $('#btn-cancel').hide();

                for (var i = 0; i < listChanged.length; i++) {
                    $('#' + listChanged[i]).css('background-color', 'white');
                }

                isEditable = false;

                if(disform)
                    $('#form_zero *').prop('disabled', true);
                else {
                    $('#form_zero *').prop('disabled', false);
                }

                $('#list-applicant').prop('disabled', false);
            }
        }

        // Save applicant. Handler
        function applicantHandler(data) {
            // if data is error
            if (Array.isArray(data)) {
                alert("Обработка ошибок.\n Некоторые данные не заполнены.");
                return;
            }
            // incerepted errors
            if (data.model == 'failed') {
                new PNotify({title: 'Помилка',text: data.modelList,type: 'error',styling: 'bootstrap3'});
                return;
            }

            if (data.model == 'confirmed') {
                new PNotify({ title: 'Повідомлення', text: data.modelList, type: 'success', styling: 'bootstrap3' });
                EditableMode(false);

                if (typeof data.applicantId != 'undefined') {
                    $('#ApplicantId').val(data.applicantId);
                }
                $('#list-applicant option').last().text($('#NameApplicant').val());
            }
        }

        // before sending to the server (cancel/save)
        function applicantHandlerBegin(e, data) {
            if (isNotSendClick) {
                isNotSendClick = false;
                return false;
            }
        }
    </script>
}
<style>
    #list-applicant {
        overflow: auto;
        border: 0;
        outline: 0;
        width: 100%;
        padding-right: 5px;
    }

    #list-applicant > option:nth-child(even) {
        background-color: #EEEEEE;
    }

    #list-applicant > option {
        margin: 0;
        padding: 5px;
        color: #73879c;
    }

    #list-applicant > option:hover {
        background-color: #73879c;
        color: white;
    }

    .list-special {
        width: 100%;
        border: none;
    }

    .state-icon {
        left: -5px;
    }
    .list-group-item-primary {
        color: rgb(255, 255, 255);
        background-color: rgb(66, 139, 202);
    }
</style>

